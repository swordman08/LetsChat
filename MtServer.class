// Source code is decompiled from a .class file using FernFlower decompiler.
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;

public class MtServer {
   private ArrayList<Client> clientList = new ArrayList();
   private Set<String> activeUsernames = new HashSet();
   private boolean hostAssigned = false;

   public MtServer() {
   }

   public synchronized boolean isUsernameAvailable(String var1) {
      return !this.activeUsernames.contains(var1);
   }

   public synchronized void addUsername(String var1) {
      this.activeUsernames.add(var1);
   }

   public synchronized void removeUsername(String var1) {
      this.activeUsernames.remove(var1);
   }

   public synchronized boolean getHostAssigned() {
      return this.hostAssigned;
   }

   public synchronized void setHostAssigned() {
      this.hostAssigned = true;
   }

   private void getConnection() {
      System.out.println("Waiting for client connections on port 9004.");

      try {
         ServerSocket var1 = new ServerSocket(9004);

         try {
            while(true) {
               Socket var2 = var1.accept();
               Client var3 = new Client(var2, "");
               ClientHandler var4 = new ClientHandler(var3, this.clientList, this);
               Thread var5 = new Thread(var4);
               var5.start();
            }
         } catch (Throwable var7) {
            try {
               var1.close();
            } catch (Throwable var6) {
               var7.addSuppressed(var6);
            }

            throw var7;
         }
      } catch (IOException var8) {
         System.out.println(var8.getMessage());
      }
   }

   public static void main(String[] var0) {
      MtServer var1 = new MtServer();
      var1.getConnection();
   }
}
